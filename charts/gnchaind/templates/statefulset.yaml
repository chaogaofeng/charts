apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gnchaind.fullname" . }}
  labels:
    {{- include "gnchaind.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gnchaind.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "gnchaind.fullname" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "gnchaind.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gnchaind.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /root/.gnchain
              name: data-pvc
              subPath: .gnchain
            - mountPath: /root/config
              name: config
            - mountPath: /root/secret
              name: secret
          env:
            - name: RECOVER
              {{- if .Values.validator_mnemonic }}
              valueFrom:
                secretKeyRef:
                  name:  {{ include "gnchaind.secretName" . }}
                  key: validator_mnemonic
              {{- end }}
            - name: MONIKER
              value: {{ .Values.moniker }}
          command:
            - "sh"
            - "-c"
            - |
              set -ex
              if ! [ -f /root/.gnchain/config/genesis.json ]; then
                if [ -n "$RECOVER" ]; then
                  echo "$RECOVER" | gnchaind init "$MONIKER" --recover
                else
                  gnchaind init "$MONIKER"
                fi

                if ! [ -f /root/config/genesis.json ]; then
                  gnchaind chain /root/secret/chain.yaml --home chain
                  cp chain/config/genesis.json /root/.gnchain/config/genesis.json
                  rm -rf chain
                else 
                  cp /root/config/genesis.json /root/.gnchain/config/genesis.json
                fi 

                if [ -f /root/secret/node_key.json ]; then
                  cp /root/secret/node_key.json /root/.gnchain/config/node_key.json
                fi 
              fi
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: GNCHAIND_RPC_MONIKER
              value: {{ .Values.moniker }}
            - name: GNCHAIND_RPC_LADDR
              value: {{ .Values.rpc }}
            - name: GNCHAIND_P2P_PERSISTENT_PEERS
              value: {{ .Values.persistent_peers }}
            - name: GNCHAIND_P2P_ADDR_BOOK_STRICT
              value: "false"
          command:
            - "sh"
            - "-c"
            - |
              set -e
              gnchaind start
          ports:
            {{- range $name, $port := .Values.service.ports }}
            - containerPort: {{ $port }}
              name: {{ $name }}
            {{- end }}
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /root
              name: data-pvc
      volumes:
        - name: config
          configMap:
            name: {{ include "gnchaind.configMapName" . }}
        - name: secret
          secret:
            secretName: {{ include "gnchaind.secretName" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data-pvc
      spec:
        accessModes:
          {{- range .Values.volumeClaimTemplate.accessModes }}
          - {{ . }}
        {{- end }}
        storageClassName: {{ .Values.volumeClaimTemplate.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.volumeClaimTemplate.size }}